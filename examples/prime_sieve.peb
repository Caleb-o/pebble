fn sieve(is_prime []bool, limit int) void {
    var i = 0;
    while i <= limit {
        is_prime[i] = false;
        i = i + 1;
    }

    i = 2;
    while i <= limit {
        is_prime[i] = true;
        i = i + 1;
    }

    var p = 2;
    while p * p <= limit {
        if is_prime[p] {
            var multiple = p * 2;
            while multiple <= limit {
                is_prime[multiple] = false;
                multiple = multiple + p;
            }
        }
        p = p + 1;
    }
}

fn main() int {
    var primes [1001]bool;
    let limit = 1000;
    sieve(primes, limit);
    var i = 2;
    while i <= limit {
        if primes[i] {
            print i;
        }
        i = i + 1;
    }
    return 0;
}
